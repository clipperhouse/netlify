<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gens on clipperhouse.com</title>
    <link>http://localhost:1313/gen/</link>
    <description>Recent content in Gens on clipperhouse.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/gen/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gen: force flag</title>
      <link>http://localhost:1313/gen/force/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/force/</guid>
      <description>Tolerating type errors gen operates by parsing and type-checking your source code. The correctness of your code will affect gen&amp;rsquo;s ability to operate.</description>
    </item>
    <item>
      <title>gen: optional typewriters</title>
      <link>http://localhost:1313/gen/optional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/optional/</guid>
      <description>Here are a few optional typewriters I&amp;rsquo;ve created. They are not built into gen, but can be added as follows.</description>
    </item>
    <item>
      <title>gen: slice typewriter</title>
      <link>http://localhost:1313/gen/slice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/slice/</guid>
      <description>The slice typewriter is built into gen by default. It generates functional convenience methods that will look familiar to users of C#&amp;rsquo;s LINQ or JavaScript&amp;rsquo;s Array methods.</description>
    </item>
    <item>
      <title>gen: stringer</title>
      <link>http://localhost:1313/gen/stringer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/stringer/</guid>
      <description>The stringer typewriter is a fork of Rob Pike’s tool of the same name, which generates readable strings for consts.</description>
    </item>
    <item>
      <title>gen: type writers</title>
      <link>http://localhost:1313/gen/typewriters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/typewriters/</guid>
      <description>gen is driven by “type writers” – packages which are responsible for interpreting the annotated tags and turning them into generated code.</description>
    </item>
    <item>
      <title>gen: Type-driven code generation for Go</title>
      <link>http://localhost:1313/gen/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gen/overview/</guid>
      <description>gen is an attempt to bring some generics-like functionality to Go. It uses type annotations to add &amp;ldquo;of T&amp;rdquo; functionality to your packages.</description>
    </item>
  </channel>
</rss>
